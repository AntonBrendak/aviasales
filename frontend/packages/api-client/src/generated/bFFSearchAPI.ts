/**
 * Generated by orval v6.27.0 🍺
 * Do not edit manually.
 * BFF Search API
 * OpenAPI spec version: 1.0.0
 */
import type {
  GetV1Airports200,
  GetV1AirportsParams,
  GetV1SearchIdResults200,
  GetV1SearchIdResultsParams,
  PostV1Search201,
  PostV1SearchBody
} from './model'
import { apiHttp } from '../http';



  export const getBFFSearchAPI = () => {
const getV1Airports = (
    params?: GetV1AirportsParams,
 ) => {
      return apiHttp<GetV1Airports200>(
      {url: `/v1/airports`, method: 'GET',
        params
    },
      );
    }
  
const postV1Search = (
    postV1SearchBody: PostV1SearchBody,
 ) => {
      return apiHttp<PostV1Search201>(
      {url: `/v1/search`, method: 'POST',
      headers: {'Content-Type': 'application/json', },
      data: postV1SearchBody
    },
      );
    }
  
const getV1SearchIdResults = (
    id: string,
    params?: GetV1SearchIdResultsParams,
 ) => {
      return apiHttp<GetV1SearchIdResults200>(
      {url: `/v1/search/${id}/results`, method: 'GET',
        params
    },
      );
    }
  
return {getV1Airports,postV1Search,getV1SearchIdResults}};

type AwaitedInput<T> = PromiseLike<T> | T;

    type Awaited<O> = O extends AwaitedInput<infer T> ? T : never;

export type GetV1AirportsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getBFFSearchAPI>['getV1Airports']>>>
export type PostV1SearchResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getBFFSearchAPI>['postV1Search']>>>
export type GetV1SearchIdResultsResult = NonNullable<Awaited<ReturnType<ReturnType<typeof getBFFSearchAPI>['getV1SearchIdResults']>>>
